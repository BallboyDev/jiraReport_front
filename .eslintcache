[{"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\index.js":"1","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\App.js":"2","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\Utils.js":"3","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\Main.js":"4","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\work\\Work.js":"5","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\test\\Test.js":"6","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\daily\\Daily.js":"7","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\project\\Project.js":"8","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\main\\Total.js":"9","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\Nav.js":"10","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\timedate\\TimeDate.js":"11","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\timeline\\TimeLine.js":"12","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\cost\\Cost.js":"13","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\Contents.js":"14","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\Search.js":"15","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\main\\tabs\\Tab1.js":"16","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\main\\tabs\\Tab2.js":"17","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\main\\tabs\\Tab3.js":"18","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\index.js":"19","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JButton.js":"20","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JDate.js":"21","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JDefault.js":"22","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JCard.js":"23","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JLabel.js":"24","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JDropDown.js":"25","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JMenu.js":"26","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JMenuTab.js":"27","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JMultiTextField.js":"28","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JTab.js":"29","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JDropDown2.js":"30","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JTextField.js":"31","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JTabs.js":"32","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JMultiDropDown.js":"33"},{"size":187,"mtime":1626914513094,"results":"34","hashOfConfig":"35"},{"size":2803,"mtime":1626914512995,"results":"36","hashOfConfig":"35"},{"size":4072,"mtime":1627359740789,"results":"37","hashOfConfig":"35"},{"size":355,"mtime":1626914513018,"results":"38","hashOfConfig":"35"},{"size":14302,"mtime":1627445720210,"results":"39","hashOfConfig":"35"},{"size":5115,"mtime":1626933158506,"results":"40","hashOfConfig":"35"},{"size":9530,"mtime":1626914513114,"results":"41","hashOfConfig":"35"},{"size":29138,"mtime":1627447866303,"results":"42","hashOfConfig":"35"},{"size":1169,"mtime":1626914513122,"results":"43","hashOfConfig":"35"},{"size":1443,"mtime":1626914513024,"results":"44","hashOfConfig":"35"},{"size":9015,"mtime":1627264311276,"results":"45","hashOfConfig":"35"},{"size":6137,"mtime":1626914513174,"results":"46","hashOfConfig":"35"},{"size":8046,"mtime":1626914513108,"results":"47","hashOfConfig":"35"},{"size":1061,"mtime":1626914513014,"results":"48","hashOfConfig":"35"},{"size":429,"mtime":1626914513028,"results":"49","hashOfConfig":"35"},{"size":14358,"mtime":1626933895479,"results":"50","hashOfConfig":"35"},{"size":11382,"mtime":1626914513136,"results":"51","hashOfConfig":"35"},{"size":14735,"mtime":1626914513143,"results":"52","hashOfConfig":"35"},{"size":640,"mtime":1626914513090,"results":"53","hashOfConfig":"35"},{"size":412,"mtime":1626914513033,"results":"54","hashOfConfig":"35"},{"size":3149,"mtime":1626914513041,"results":"55","hashOfConfig":"35"},{"size":407,"mtime":1626914513045,"results":"56","hashOfConfig":"35"},{"size":1510,"mtime":1626914513037,"results":"57","hashOfConfig":"35"},{"size":286,"mtime":1626914513061,"results":"58","hashOfConfig":"35"},{"size":4636,"mtime":1626914513049,"results":"59","hashOfConfig":"35"},{"size":1510,"mtime":1626914513064,"results":"60","hashOfConfig":"35"},{"size":264,"mtime":1626914513068,"results":"61","hashOfConfig":"35"},{"size":535,"mtime":1626914513076,"results":"62","hashOfConfig":"35"},{"size":354,"mtime":1626914513079,"results":"63","hashOfConfig":"35"},{"size":4439,"mtime":1627444993520,"results":"64","hashOfConfig":"35"},{"size":1195,"mtime":1627263245419,"results":"65","hashOfConfig":"35"},{"size":2051,"mtime":1626914513083,"results":"66","hashOfConfig":"35"},{"size":9161,"mtime":1627373606663,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1yaswae",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\index.js",[],["148","149"],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\App.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\Utils.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\Main.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\work\\Work.js",["150","151","152","153","154"],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\test\\Test.js",["155","156","157","158","159","160","161","162","163","164","165","166"],"import React from 'react';\r\nimport Search from '../../component/Search'\r\nimport Contents from '../../component/Contents'\r\nimport { JButton, JCard, JDate, JDefault, JDropDown, JLabel, JMenu, JTextField, JMultiDropDown, JTabs, JTab, JDropDown2 } from '../../component/condition'\r\nimport Chart from 'react-google-charts'\r\nimport DataTable, { defaultThemes } from 'react-data-table-component'\r\n\r\n\r\nconst list = [\r\n    { label: '개발1Cell', key: '1', color: 'red' },\r\n    { label: '개발2Cell', key: '2', color: 'blue' },\r\n    { label: '개발3Cell', key: '3', color: 'green' },\r\n    { label: '개발4Cell', key: '4', color: 'yellow' },\r\n    { label: '개발5Cell', key: '5', color: 'pink' },\r\n    { label: '개발6Cell', key: '6', color: 'purple' },\r\n    { label: '개발7Cell', key: '7', color: 'gray' },\r\n    { label: '개발8Cell', key: '8', color: 'gold' },\r\n]\r\n\r\n\r\nexport default class extends React.Component {\r\n    util = this.props.util\r\n\r\n    state = {\r\n        search: {\r\n\r\n        },\r\n        data: {\r\n\r\n        },\r\n        // value: { label: 'label3', key: 3 }\r\n        value1: '1',\r\n        value2: ['1', '3', '5', '7']\r\n        // value2: [\r\n        //     { label: '개발1Cell', key: '1', color: 'red' },\r\n        //     { label: '개발3Cell', key: '3', color: 'green' },\r\n        //     { label: '개발5Cell', key: '5', color: 'pink' },\r\n        //     { label: '개발7Cell', key: '7', color: 'gray' },\r\n        // ]\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.search()\r\n    }\r\n\r\n    search = () => {\r\n        // console.log('Test Page Search')\r\n    }\r\n\r\n    onChange1 = (e) => {\r\n        this.setState({ value1: e.value })\r\n    }\r\n\r\n    onChange2 = (e) => {\r\n        this.setState({ value2: e.value })\r\n    }\r\n\r\n    render = () => {\r\n        const setParam = (key, value) => {\r\n            this.setState({\r\n                search: {\r\n                    ...this.state.search,\r\n                    [key]: value\r\n                }\r\n            })\r\n        }\r\n\r\n        return (\r\n            <JMenu>\r\n                <Search\r\n                    onConfirm={(e) => {\r\n                        console.log('this.state => ', this.state)\r\n                        console.log('this.props => ', this.props)\r\n                        // this.search()\r\n\r\n                        this.setState({\r\n                            value: this.state.value + 1\r\n                        })\r\n                    }}>\r\n                    <JDefault />\r\n                    <JDropDown2\r\n                        label='JDropDown2'\r\n                        value={this.state.value1}\r\n                        list={list}\r\n                        onChange={this.onChange1} />\r\n                    <JMultiDropDown\r\n                        label='JMultiDropDown'\r\n                        value={this.state.value2}\r\n                        list={list}\r\n                        onChange={this.onChange2} />\r\n                </Search>\r\n                <Contents >\r\n                    <JCard x={'1/6'} y={'1/2'}>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: '10%' }}>col1</th>\r\n                                    <th style={{ width: '10%' }}>col2</th>\r\n                                    <th style={{ width: '80%' }}>col3</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr style={{ height: '2rem' }}>\r\n                                    <td>\r\n                                        <JMultiDropDown\r\n                                            label='JMultiDropDown'\r\n                                            value={this.state.value2}\r\n                                            list={list}\r\n                                            onChange={this.onChange2} />\r\n                                    </td>\r\n                                    <td>\r\n                                        {/* <JMultiDropDown\r\n                                        label='JMultiDropDown'\r\n                                        value={this.state.value2}\r\n                                        list={list}\r\n                                        onChange={this.onChange2} /> */}\r\n                                    </td>\r\n                                    <td>data1-3</td>\r\n                                </tr>\r\n                                <tr style={{ height: '2rem' }}>\r\n                                    <td>data2-1</td>\r\n                                    <td>data2-2</td>\r\n                                    <td>data2-3</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </JCard>\r\n                    <JCard x={'1/6'} y={'4/3'}>\r\n\r\n                    </JCard>\r\n                    <JCard x={'7/6'} y={'1/3'}>\r\n\r\n                    </JCard>\r\n                    <JCard x={'7/6'} y={'4/3'}>\r\n\r\n                    </JCard>\r\n                </Contents>\r\n            </JMenu>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\daily\\Daily.js",["167","168","169","170","171","172","173","174","175"],"import React from 'react';\r\nimport Search from '../../component/Search'\r\nimport Contents from '../../component/Contents'\r\nimport { JButton, JCard, JDate, JDefault, JDropDown, JMultiTextField, JLabel, JMenu, JTextField, JTabs, JTab } from '../../component/condition'\r\nimport Chart from 'react-google-charts'\r\nimport DataTable, { defaultThemes } from 'react-data-table-component'\r\n\r\nconst col = [\r\n    { name: '담당자', selector: 'NAME', sortable: true, grow: 1 },\r\n    { name: '유형', selector: 'GROUP', sortable: true, grow: 1 },\r\n    { name: '구분', selector: 'TYPE', sortable: true, grow: 1.5 },\r\n    { name: '모듈', selector: 'MODULES', sortable: true, grow: 1 },\r\n    { name: '제품', selector: 'PRODUCT', sortable: true, grow: 1.5 },\r\n    { name: '키', selector: 'KEY', sortable: true, grow: 1.5 },\r\n    { name: '요약', selector: 'SUMMARY', sortable: true, grow: 5 },\r\n    { name: '상태', selector: 'STATUS', sortable: true, grow: 1.5 },\r\n    { name: '시작일', selector: 'DT_START', sortable: true, grow: 1 },\r\n    { name: '종료일', selector: 'DT_END', sortable: true, grow: 1 },\r\n]\r\n\r\nexport default class extends React.Component {\r\n    util = this.props.util\r\n\r\n    state = {\r\n        search: {\r\n            baseDt: this.util.baseDate.today,\r\n            deptFg: [this.util.team[0]],\r\n            empFg: [],\r\n            empList: [],\r\n        },\r\n        data: {\r\n            todayText: '',\r\n            todayGrid: [],\r\n            yesterdayText: '',\r\n            yesterdayGrid: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.search()\r\n    }\r\n\r\n    search = () => {\r\n        this.getData.empList()\r\n        this.getData.today()\r\n        this.getData.yesterday()\r\n    }\r\n\r\n    getData = {\r\n        empList: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/name', {\r\n                    team: this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, '')\r\n                })\r\n                this.setState({\r\n                    search: {\r\n                        ...this.state.search,\r\n                        empList: [{ all: 'A', label: '전체', key: '' }, ...res.data.map((v) => { return { label: v.NAME, value: v.ID } })]\r\n                    }\r\n                }, () => {\r\n\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        today: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/daily/task_text_table', {\r\n                    dt_now: this.state.search.baseDt,\r\n                    team: this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, ''),\r\n                    id: this.state.search.empFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, ''),\r\n                    done_fg: '1',\r\n                })\r\n\r\n                let [todayText, ...todayGrid] = res.data.reverse()\r\n\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        todayText: todayText.TEXT.TEXT,\r\n                        todayGrid: todayGrid\r\n                    }\r\n                }, () => { console.log(this.state.data) })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        yesterday: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/daily/task_text_table', {\r\n                    dt_now: this.state.search.baseDt,\r\n                    team: this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, ''),\r\n                    id: this.state.search.empFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, ''),\r\n                    done_fg: '0',\r\n                })\r\n\r\n                let [yesterdayText, ...yesterdayGrid] = res.data.reverse()\r\n\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        yesterdayText: yesterdayText.TEXT.TEXT,\r\n                        yesterdayGrid: yesterdayGrid\r\n                    }\r\n                }, () => { console.log(this.state.data) })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const setParam = (key, value) => {\r\n            this.setState({\r\n                search: {\r\n                    ...this.state.search,\r\n                    [key]: value\r\n                }\r\n            })\r\n        }\r\n\r\n        let titleDt = this.state.search.baseDt\r\n\r\n        return (\r\n            <JMenu>\r\n                <Search\r\n                    onConfirm={(e) => {\r\n                        console.log('this.state => ', this.state)\r\n                        console.log('this.props => ', this.props)\r\n\r\n                    }}>\r\n                    <JDate\r\n                        label='기준일자'\r\n                        type='single'\r\n                        value={this.state.search.baseDt}\r\n                        onChange={(e) => { setParam('baseDt', e.value) }} />\r\n                    <JDropDown\r\n                        label='부서'\r\n                        type='multi'\r\n                        value={this.state.search.deptFg}\r\n                        list={this.util.team}\r\n                        placeHolder='부서를 선택해주세요'\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                search: {\r\n                                    ...this.state.search,\r\n                                    deptFg: e.value\r\n                                }\r\n                            }, () => {\r\n                                this.getData.empList()\r\n                            })\r\n                        }} />\r\n                    <JDropDown\r\n                        label='사원'\r\n                        type='multi'\r\n                        disabled={this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).length === 0}\r\n                        value={this.state.search.empFg}\r\n                        list={this.state.search.empList}\r\n                        placeHolder='사원을 선택해주세요'\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                search: {\r\n                                    ...this.state.seach,\r\n                                    empFg: e.value\r\n                                }\r\n                            })\r\n                        }} />\r\n                </Search>\r\n                <Contents >\r\n                    <JCard search >\r\n                        {/* <JDefault /> */}\r\n                        <JDropDown\r\n                            label='부서'\r\n                            type='multi'\r\n                            value={this.state.search.deptFg}\r\n                            list={this.util.team}\r\n                            placeHolder='부서를 선택해주세요'\r\n                            onChange={(e) => {\r\n                                this.setState({\r\n                                    search: {\r\n                                        ...this.state.search,\r\n                                        deptFg: e.value\r\n                                    }\r\n                                }, () => {\r\n                                    this.getData.empList()\r\n                                })\r\n                            }} />\r\n                    </JCard>\r\n                    <JCard x={'1/12'} y={'1/2'} title={'근무시간 등록'} >\r\n\r\n                    </JCard>\r\n                    <JCard x={'1/6'} y={'3/3'}\r\n                        title={`${titleDt.substring(0, 4)}년 ${titleDt.substring(4, 6)}월 ${titleDt.substring(6, 8)}일 일일업무 보고`} >\r\n                        <JMultiTextField\r\n                            value={this.state.data.todayText} />\r\n                    </JCard>\r\n                    <JCard x={'7/6'} y={'3/3'}\r\n                        title={`부서 주요업무`} >\r\n                        <JMultiTextField\r\n                            value={this.state.data.yesterdayText} />\r\n                    </JCard>\r\n                    <JCard x={'1/12'} y={'6/5'} title={'오늘 주요업무'} >\r\n                        <DataTable\r\n                            noHeader\r\n                            columns={col}\r\n                            data={this.state.data.todayGrid}\r\n                            pagination\r\n                            paginationDefaultPage={1}\r\n                            paginationPerPage={12} />\r\n                    </JCard>\r\n                    <JCard x={'1/12'} y={'11/5'} title={'전일 주요업무'} >\r\n                        <DataTable\r\n                            noHeader\r\n                            columns={col}\r\n                            data={this.state.data.yesterdayGrid}\r\n                            pagination\r\n                            paginationDefaultPage={1}\r\n                            paginationPerPage={12} />\r\n                    </JCard>\r\n                </Contents>\r\n            </JMenu>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\project\\Project.js",["176","177","178","179","180","181","182","183","184"],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\main\\Total.js",["185","186","187","188","189","190","191","192","193","194","195","196"],"import React from 'react';\r\nimport Search from '../../component/Search'\r\nimport Contents from '../../component/Contents'\r\nimport Tab1 from './tabs/Tab1'\r\nimport Tab2 from './tabs/Tab2'\r\nimport Tab3 from './tabs/Tab3'\r\nimport Chart from 'react-google-charts'\r\nimport { JButton, JCard, JDate, JDefault, JDropDown, JMenuTab, JLabel, JMenu, JTextField } from '../../component/condition'\r\nimport util from '../../Utils';\r\n\r\nexport default class extends React.Component {\r\n    // util = util\r\n    util = this.props.util\r\n\r\n    state = {\r\n        tabIndex: '1'\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <JMenu\r\n                onTabs={(v) => { this.setState({ tabIndex: v }) }}\r\n                tab={this.state.tabIndex}>\r\n                <JMenuTab value={'1'}>\r\n                    <Tab1 util={this.util} />\r\n                </JMenuTab>\r\n                <JMenuTab value={'2'}>\r\n                    <Tab2 util={this.util} />\r\n                </JMenuTab>\r\n                <JMenuTab value={'3'}>\r\n                    <Tab3 util={this.util} />\r\n                </JMenuTab>\r\n            </JMenu>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\Nav.js",["197"],"import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport ip from 'ip';\r\n\r\nexport default class App extends React.Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount = () => {\r\n    }\r\n\r\n    handler = {\r\n        tab: (e) => {\r\n            this.setState({\r\n                selectTab: e.target.id\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const { tabs, onClick, selectTab } = this.props\r\n        return (\r\n            <div id='top'>\r\n                <div id='logo' className='content'>\r\n                    <img src='/image/logo.png' alt='douzone' />\r\n                </div>\r\n                { tabs.map((v, i) => {\r\n                    return (\r\n                        <Link\r\n                            to={v.link}\r\n                            key={v.key}\r\n                            id={v.key}\r\n                            className={`content btn ${selectTab === v.key ? 'select' : ''}`}\r\n                            onClick={() => { onClick(v.key) }}\r\n                        >\r\n                            {v.content}\r\n                        </Link>\r\n                    )\r\n                })}\r\n                {/* {this.props.children} */}\r\n                <div className='user'>\r\n                    <img className='userimg' src='/image/yswgood0329.png' />\r\n                    <div className='userIp'>{ip.address()}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\timedate\\TimeDate.js",["198","199","200","201","202","203","204","205"],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\timeline\\TimeLine.js",["206","207","208","209","210","211","212","213","214"],"import React from 'react';\r\nimport Search from '../../component/Search'\r\nimport Contents from '../../component/Contents'\r\nimport { JButton, JCard, JDate, JDefault, JDropDown, JLabel, JMenu, JTextField, JTabs, JTab } from '../../component/condition'\r\nimport Chart from 'react-google-charts'\r\nimport DataTable, { defaultThemes } from 'react-data-table-component'\r\n\r\n\r\nexport default class extends React.Component {\r\n    util = this.props.util\r\n\r\n    state = {\r\n        search: {\r\n            searchDt: {\r\n                from: this.util.baseDate.weekMonDay,\r\n                to: this.util.baseDate.weekFriDay\r\n            },\r\n            deptFg: [this.util.team[0]],\r\n            empFg: [],\r\n            empList: [],\r\n        },\r\n        timeline: []\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.search()\r\n    }\r\n\r\n    search = () => {\r\n        this.getData.empList()\r\n        this.getData.getTimeLineData()\r\n    }\r\n\r\n    getData = {\r\n        empList: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/name', {\r\n                    team: this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, '')\r\n                })\r\n                this.setState({\r\n                    search: {\r\n                        ...this.state.search,\r\n                        empList: [{ all: 'A', label: '전체', key: '' }, ...res.data.map((v) => { return { label: v.NAME, value: v.ID } })]\r\n                    }\r\n                }, () => {\r\n\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        getTimeLineData: async () => {\r\n            try {\r\n                console.log(\r\n                    this.state.search.searchDt.from,\r\n                    this.state.search.searchDt.to,\r\n                    this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, ''),\r\n                    this.state.search.empFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, '')\r\n                )\r\n\r\n                let res = await this.util.callApi.get('/timeline/list', {\r\n                    dt_start: this.state.search.searchDt.from,\r\n                    dt_end: this.state.search.searchDt.to,\r\n                    team: this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, ''),\r\n                    id: this.state.search.empFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, '')\r\n                })\r\n                this.setState({\r\n                    timeline: res.data\r\n                }, () => {\r\n                    console.log(res.data)\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const setParam = (key, value) => {\r\n            this.setState({\r\n                search: {\r\n                    ...this.state.search,\r\n                    [key]: value\r\n                }\r\n            })\r\n        }\r\n\r\n        return (\r\n            <JMenu>\r\n                <Search\r\n                    onConfirm={(e) => {\r\n                        console.log('this.state => ', this.state)\r\n                        console.log('this.props => ', this.props)\r\n                    }}>\r\n                    <JDate\r\n                        label='조회기간'\r\n                        type='period'\r\n                        value={this.state.search.searchDt}\r\n                        onChange={(e) => { setParam('searchDt', e.value) }} />\r\n                    <JDropDown\r\n                        label='부서'\r\n                        type='multi'\r\n                        value={this.state.search.deptFg}\r\n                        list={this.util.team}\r\n                        placeHolder='부서를 선택해주세요'\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                search: {\r\n                                    ...this.state.search,\r\n                                    deptFg: e.value\r\n                                }\r\n                            }, () => {\r\n                                this.getData.empList()\r\n                            })\r\n                        }} />\r\n                    <JDropDown\r\n                        label='사원'\r\n                        type='multi'\r\n                        disabled={this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).length === 0}\r\n                        value={this.state.search.empFg}\r\n                        list={this.state.search.empList}\r\n                        placeHolder='사원을 선택해주세요'\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                search: {\r\n                                    ...this.state.seach,\r\n                                    empFg: e.value\r\n                                }\r\n                            })\r\n                        }} />\r\n                </Search>\r\n                <Contents >\r\n                    <JCard x={'1/12'} y={'1/6'}>\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"Timeline\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.timeline}\r\n                            options={{\r\n                                // showRowNumber: true,\r\n                                hAxis: {\r\n                                    format: 'M월d일'\r\n                                }\r\n                            }}\r\n                            rootProps={{ 'data-testid': '1' }}\r\n                        />\r\n                    </JCard>\r\n                </Contents>\r\n            </JMenu>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\cost\\Cost.js",["215","216","217","218","219","220","221","222","223","224"],"import React from 'react';\r\nimport Search from '../../component/Search'\r\nimport Contents from '../../component/Contents'\r\nimport { JButton, JCard, JDate, JDefault, JDropDown, JMultiTextField, JLabel, JMenu, JTextField, JTabs, JTab } from '../../component/condition'\r\nimport Chart from 'react-google-charts'\r\nimport DataTable, { defaultThemes } from 'react-data-table-component'\r\n\r\nconst col = [\r\n    { name: '이름', selector: 'NAME', sortable: true, grow: 1 },\r\n    { name: '분류', selector: 'PART', sortable: true, grow: 2 },\r\n    { name: '대분류', selector: 'CATEGORY_L', sortable: true, grow: 1.5 },\r\n    { name: '중분류', selector: 'CATEGORY_M', sortable: true, grow: 1.5 },\r\n    { name: '소분류', selector: 'CATEGORY_S', sortable: true, grow: 1.5 },\r\n    { name: '1월', selector: 'M1', sortable: true, grow: 0.5 },\r\n    { name: '2월', selector: 'M2', sortable: true, grow: 0.5 },\r\n    { name: '3월', selector: 'M3', sortable: true, grow: 0.5 },\r\n    { name: '4월', selector: 'M4', sortable: true, grow: 0.5 },\r\n    { name: '5월', selector: 'M5', sortable: true, grow: 0.5 },\r\n    { name: '6월', selector: 'M6', sortable: true, grow: 0.5 },\r\n    { name: '7월', selector: 'M7', sortable: true, grow: 0.5 },\r\n    { name: '8월', selector: 'M8', sortable: true, grow: 0.5 },\r\n    { name: '9월', selector: 'M9', sortable: true, grow: 0.5 },\r\n    { name: '10월', selector: 'M10', sortable: true, grow: 0.5 },\r\n    { name: '11월', selector: 'M11', sortable: true, grow: 0.5 },\r\n    { name: '12월', selector: 'M12', sortable: true, grow: 0.5 },\r\n]\r\n\r\nexport default class extends React.Component {\r\n    util = this.props.util\r\n\r\n    state = {\r\n        search: {\r\n            baseDt: this.util.baseDate.today,\r\n            deptFg: [this.util.team[0]],\r\n            empFg: [],\r\n            empList: [],\r\n        },\r\n\r\n        cost: [],\r\n        sumData: {\r\n            CNT_ID: '',\r\n            MON_TIME: '',\r\n            SUM_TIME: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.search()\r\n    }\r\n\r\n    search = () => {\r\n        this.getData.empList()\r\n        this.getData.getCostData()\r\n        this.getData.getCostSumData()\r\n    }\r\n\r\n    getData = {\r\n        empList: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/name', {\r\n                    team: this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, '')\r\n                })\r\n                this.setState({\r\n                    search: {\r\n                        ...this.state.search,\r\n                        empList: [{ all: 'A', label: '전체', key: '' }, ...res.data.map((v) => { return { label: v.NAME, value: v.ID } })]\r\n                    }\r\n                }, () => {\r\n\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        getCostData: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/cost/selectCost', {\r\n                    cond_dt_base: this.state.search.baseDt,\r\n                    cond_team: this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, ''),\r\n                    cond_id: this.state.search.empFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, '')\r\n                })\r\n\r\n                this.setState({ cost: res.data })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        getCostSumData: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/cost/selectCostSum', {\r\n                    cond_dt_base: this.state.search.baseDt,\r\n                    cond_team: this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, ''),\r\n                    cond_id: this.state.search.empFg.filter((v) => { return (v.value || '') !== '' }).reduce((a, c) => { return `${a}${c.value}|` }, '')\r\n                })\r\n\r\n                console.log(res.data)\r\n\r\n                this.setState({\r\n                    sumData: res.data[0]\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const setParam = (key, value) => {\r\n            this.setState({\r\n                search: {\r\n                    ...this.state.search,\r\n                    [key]: value\r\n                }\r\n            })\r\n        }\r\n\r\n        let { CNT_ID, MON_TIME, SUM_TIME } = this.state.sumData\r\n\r\n        return (\r\n            <JMenu>\r\n                <Search\r\n                    onConfirm={(e) => {\r\n                        console.log('this.state => ', this.state)\r\n                        console.log('this.props => ', this.props)\r\n\r\n                    }}>\r\n                    <JDate\r\n                        label='기준일자'\r\n                        type='single'\r\n                        value={this.state.search.baseDt}\r\n                        onChange={(e) => { setParam('baseDt', e.value) }} />\r\n                    <JDropDown\r\n                        label='부서'\r\n                        type='multi'\r\n                        value={this.state.search.deptFg}\r\n                        list={this.util.team}\r\n                        placeHolder='부서를 선택해주세요'\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                search: {\r\n                                    ...this.state.search,\r\n                                    deptFg: e.value\r\n                                }\r\n                            }, () => {\r\n                                this.getData.empList()\r\n                            })\r\n                        }} />\r\n                    <JDropDown\r\n                        label='사원'\r\n                        type='multi'\r\n                        disabled={this.state.search.deptFg.filter((v) => { return (v.value || '') !== '' }).length === 0}\r\n                        value={this.state.search.empFg}\r\n                        list={this.state.search.empList}\r\n                        placeHolder='사원을 선택해주세요'\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                search: {\r\n                                    ...this.state.seach,\r\n                                    empFg: e.value\r\n                                }\r\n                            })\r\n                        }} />\r\n                </Search>\r\n                <Contents >\r\n                    <JCard x={'1/12'} y={'1/6'}\r\n                        title={\r\n                            <div style={{ color: 'blue', fontWeight: 'bold' }}>\r\n                                ※ 원가 분석 보고서 - 월별 근무 종류별 근무일수 (근무등록시간 등록 일자 기준으로 시간 비율로 계산됩니다.) <label style={{ color: 'black' }}>조회인원: <label style={{ color: 'red' }}>{CNT_ID} 명 </label> </label><label style={{ color: 'black' }}>기준월 시간 합계: <label style={{ color: 'red' }}>{MON_TIME} 시간 </label> </label><label style={{ color: 'black' }}>기준년도 시간 합계: <label style={{ color: 'red' }}>{SUM_TIME} 시간</label></label>\r\n                            </div>\r\n                        } >\r\n                        <DataTable\r\n                            noHeader\r\n                            columns={col}\r\n                            data={this.state.cost}\r\n                            pagination\r\n                            paginationDefaultPage={1}\r\n                            paginationPerPage={15} />\r\n                    </JCard>\r\n                </Contents>\r\n            </JMenu>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\Contents.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\Search.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\main\\tabs\\Tab1.js",["225","226","227","228","229","230"],"import React from 'react';\r\nimport Search from '../../../component/Search'\r\nimport Contents from '../../../component/Contents'\r\nimport Chart from 'react-google-charts'\r\nimport { JButton, JCard, JDate, JDefault, JDropDown, JLabel, JMenu, JTextField } from '../../../component/condition'\r\n\r\nexport default class extends React.Component {\r\n    util = this.props.util\r\n\r\n    state = {\r\n        searchDt: {\r\n            from: this.util.baseDate.yearFirstDay,\r\n            to: this.util.baseDate.yearLastDay,\r\n        },\r\n        baseDt: this.props.util.baseDate.today,\r\n\r\n        data: {\r\n            chart0: [],\r\n            chart1: [],\r\n            chart2: [],\r\n            chart3: [],\r\n            chart4: [],\r\n            chart6: [],\r\n        }\r\n\r\n    }\r\n\r\n    dateFormat = (date) => {\r\n        if ((date || '') === '') return `${this.util.baseDate.today.substring(0, 4)}-${this.util.baseDate.today.substring(4, 6)}-${this.util.baseDate.today.substring(6, 8)}`\r\n        else return `${date.substring(0, 4)}-${date.substring(4, 6)}-${date.substring(6, 8)}`\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getData.chart0()\r\n        this.getData.chart1()\r\n        this.getData.chart2()\r\n        this.getData.chart3()\r\n        this.getData.chart4()\r\n        this.getData.chart6()\r\n        this.getData.getDataCnt()\r\n    }\r\n\r\n    getData = {\r\n        chart0: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/main/data_chart1', {\r\n                    dt_start: this.dateFormat(this.state.searchDt.from),\r\n                    dt_end: this.dateFormat(this.state.searchDt.to),\r\n                    dt_base: this.dateFormat(this.state.baseDt),\r\n                    group_fg: 0\r\n                })\r\n\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        chart0: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        chart1: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/main/data_chart1', {\r\n                    dt_start: this.dateFormat(this.state.searchDt.from),\r\n                    dt_end: this.dateFormat(this.state.searchDt.to),\r\n                    dt_base: this.dateFormat(this.state.baseDt),\r\n                    group_fg: 1\r\n                })\r\n\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        chart1: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        chart2: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/main/data_chart2', {\r\n                    dt_start: this.dateFormat(this.state.searchDt.from),\r\n                    dt_end: this.dateFormat(this.state.searchDt.to),\r\n                })\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        chart2: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        chart3: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/main/data_chart1', {\r\n                    dt_start: this.dateFormat(this.state.searchDt.from),\r\n                    dt_end: this.dateFormat(this.state.searchDt.to),\r\n                    dt_base: this.dateFormat(this.state.baseDt),\r\n                    group_fg: 3\r\n                })\r\n\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        chart3: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        chart4: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/main/data_chart1', {\r\n                    dt_start: this.dateFormat(this.state.searchDt.from),\r\n                    dt_end: this.dateFormat(this.state.searchDt.to),\r\n                    dt_base: this.dateFormat(this.state.baseDt),\r\n                    group_fg: 4\r\n                })\r\n\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        chart4: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        chart6: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/main/data_chart1', {\r\n                    dt_start: this.dateFormat(this.state.searchDt.from),\r\n                    dt_end: this.dateFormat(this.state.searchDt.to),\r\n                    dt_base: this.dateFormat(this.state.baseDt),\r\n                    group_fg: 6\r\n                })\r\n\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        chart6: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        getDataCnt: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/main/data_cnt', {\r\n                    dt_start: this.dateFormat(this.state.searchDt.from),\r\n                    dt_end: this.dateFormat(this.state.searchDt.to),\r\n                    dt_base: this.dateFormat(this.state.baseDt),\r\n                })\r\n\r\n                console.log(res.data)\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Search\r\n                    onConfirm={(e) => {\r\n                        console.log('this.state => ', this.state)\r\n                        console.log('this.props => ', this.props)\r\n                    }}>\r\n                    <JDate\r\n                        label='조회기간'\r\n                        type='period'\r\n                        value={this.state.searchDt}\r\n                        onChange={(e) => {\r\n                            this.setState({ searchDt: e.value })\r\n                        }} />\r\n                    <JDate\r\n                        label='기준일자'\r\n                        type='single'\r\n                        value={this.state.baseDt}\r\n                        onChange={(e) => {\r\n                            this.setState({ baseDt: e.value })\r\n                        }} />\r\n                    <JButton label='년도' onClick={() => {\r\n                        this.setState({\r\n                            searchDt: { from: this.props.util.baseDate.yearFirstDay, to: this.props.util.baseDate.yearLastDay },\r\n                            baseDt: this.props.util.baseDate.today\r\n                        })\r\n                    }} />\r\n                    <JButton label='1분기' onClick={() => {\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter1 })\r\n                    }} />\r\n                    <JButton label='2분기' onClick={() => {\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter2 })\r\n                    }} />\r\n                    <JButton label='3분기' onClick={() => {\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter3 })\r\n                    }} />\r\n                    <JButton label='4분기' onClick={() => {\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter4 })\r\n                    }} />\r\n                </Search>\r\n                <Contents >\r\n                    {/* <JCard search></JCard> */}\r\n                    <JCard x={'1/1'} y={'1/1'}\r\n                        title={<div style={{ textAlign: 'center', fontWeight: 'bold' }}>총 인원</div>}\r\n                        style={{ background: 'radial-gradient( white, skyblue )' }}>\r\n                        <div style={{ fontSize: '3.5rem' }}>1</div>\r\n                    </JCard>\r\n                    <JCard x={'1/1'} y={'2/1'}\r\n                        title={<div style={{ textAlign: 'center', fontWeight: 'bold' }}>총 건수</div>}\r\n                        style={{ background: 'radial-gradient( white, #116c61)' }}>\r\n                        <div style={{ fontSize: '3.5rem' }}>1</div>\r\n                    </JCard>\r\n                    <JCard x={'1/1'} y={'3/1'}\r\n                        title={<div style={{ textAlign: 'center', fontWeight: 'bold' }}>이동</div>}\r\n                        style={{ background: 'radial-gradient( white, #e05c04)' }}>\r\n                        <div style={{ fontSize: '3.5rem' }}>1</div>\r\n                    </JCard>\r\n                    <JCard x={'2/6'} y={'1/3'} title={<div style={{ backgroundColor: 'skyblue', fontWeight: 'bold', textAlign: 'center' }}>연구개발</div>}>\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"BarChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.chart1}\r\n                            options={{\r\n                                chartArea: {\r\n                                    width: '70%',\r\n                                    height: '80%'\r\n                                },\r\n                                legend: { position: 'none' }\r\n                            }}\r\n                            // For tests\r\n                            rootProps={{ 'data-testid': '1' }}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'8/6'} y={'1/3'} title='test'>\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"Bar\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.chart2}\r\n                            options={{\r\n                                chartArea: {\r\n                                    width: '70%',\r\n                                    height: '80%'\r\n                                },\r\n                                // legend: { position: 'none' }\r\n                            }}\r\n                            // For tests\r\n                            rootProps={{ 'data-testid': '1' }}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'1/4'} y={'4/3'} title='PIMS'>\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"PieChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.chart3}\r\n                            options={{\r\n                                chartArea: {\r\n                                    width: '90%',\r\n                                    height: '80%'\r\n                                },\r\n                            }}\r\n                            rootProps={{ 'data-testid': '1' }}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'5/4'} y={'4/3'} title='단위업무'>\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"BarChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.chart4}\r\n                            options={{\r\n                                chartArea: {\r\n                                    width: '70%',\r\n                                    height: '80%'\r\n                                },\r\n                                legend: { position: 'none' }\r\n                            }}\r\n                            // For tests\r\n                            rootProps={{ 'data-testid': '4' }}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'9/4'} y={'4/1'} >\r\n                        <table style={{ height: '100%' }}>\r\n                            <thead>\r\n                                <tr style={{ height: '2rem' }}>\r\n                                    <th style={{ width: '50%' }}>진행중</th>\r\n                                    <th style={{ width: '50%' }}>완료</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ textAlign: 'center', fontSize: '1.5rem' }}>25</td>\r\n                                    <td style={{ textAlign: 'center', fontSize: '1.5rem' }}>819</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </JCard>\r\n                    <JCard x={'9/4'} y={'5/2'} title='견적산정'>\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"Bar\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.chart6}\r\n                            options={{\r\n                                chartArea: {\r\n                                    width: '60%',\r\n                                    height: '50%'\r\n                                },\r\n                                legend: { position: 'none' }\r\n                            }}\r\n                            // For tests\r\n                            rootProps={{ 'data-testid': '6' }}\r\n                        />\r\n                    </JCard>\r\n                </Contents>\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\main\\tabs\\Tab2.js",["231","232","233","234","235","236","237"],"import React from 'react';\r\nimport Search from '../../../component/Search'\r\nimport Contents from '../../../component/Contents'\r\nimport Chart from 'react-google-charts'\r\nimport { JButton, JCard, JDate, JDefault, JDropDown, JLabel, JMenu, JTextField } from '../../../component/condition'\r\nimport DataTable, { defaultThemes } from 'react-data-table-component'\r\n\r\nconst col = [\r\n    { name: '', selector: 'NAME', sortable: false, grow: 2, },\r\n    { name: 'Amaranth10', selector: 'DEV1', sortable: false },\r\n    { name: '프로젝트(ICUBE)', selector: 'DEV2', sortable: false },\r\n    { name: '전용개발', selector: 'DEV3', sortable: false },\r\n    { name: '패키지유지보수', selector: 'DEV4', sortable: false },\r\n    { name: '전용개발유지보수', selector: 'DEV5', sortable: false },\r\n    { name: 'BizBoxAlpha', selector: 'DEV6', sortable: false },\r\n    { name: '소계', selector: 'DEV_SUM', sortable: false },\r\n    { name: '상담/교육', selector: 'JOB1', sortable: false },\r\n    { name: '영업지원', selector: 'JOB2', sortable: false },\r\n    { name: '자료제작', selector: 'JOB3', sortable: false },\r\n    { name: '자격시험', selector: 'JOB4', sortable: false },\r\n    { name: '업무협의', selector: 'JOB5', sortable: false },\r\n    { name: '기타', selector: 'JOB6', sortable: false },\r\n    { name: '소계', selector: 'JOB_SUM', sortable: false },\r\n    { name: 'PIMS상담', selector: 'ADV_SUM', sortable: false },\r\n    { name: '견적상담', selector: 'REQ_SUM', sortable: false },\r\n    { name: '합계', selector: 'TOTAL_SUM', sortable: false },\r\n]\r\n\r\nexport default class extends React.Component {\r\n    util = this.props.util\r\n\r\n    state = {\r\n        searchDt: {\r\n            from: this.util.baseDate.yearFirstDay,\r\n            to: this.util.baseDate.yearLastDay,\r\n            groupFg: '0'\r\n        },\r\n        baseDt: this.props.util.baseDate.today,\r\n        data: {\r\n            chart1: [],\r\n            chart2: [],\r\n            chart3: [],\r\n            gridData: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.chart1()\r\n        this.chart2()\r\n        this.chart3()\r\n        this.grid()\r\n    }\r\n\r\n    chart1 = async () => {\r\n        try {\r\n            let res = await this.util.callApi.get('/totalview/chart1', {\r\n                dt_start: this.state.searchDt.from,\r\n                dt_end: this.state.searchDt.to,\r\n            })\r\n            this.setState({\r\n                data: {\r\n                    ...this.state.data,\r\n                    chart1: res.data\r\n                }\r\n            }, () => { console.log('chart1', this.state.data.chart1) })\r\n        } catch (err) {\r\n            console.log('##### ERROR #####')\r\n            console.error(err)\r\n        }\r\n    }\r\n    chart2 = async () => {\r\n        try {\r\n            let res = await this.util.callApi.get('/totalview/chart2', {\r\n                dt_start: this.state.searchDt.from,\r\n                dt_end: this.state.searchDt.to,\r\n            })\r\n\r\n            this.setState({\r\n                data: {\r\n                    ...this.state.data,\r\n                    chart2: res.data\r\n                }\r\n            }, () => { console.log('chart2', this.state.data.chart2) })\r\n        } catch (err) {\r\n            console.log('##### ERROR #####')\r\n            console.error(err)\r\n        }\r\n    }\r\n    chart3 = async () => {\r\n        try {\r\n            let res = await this.util.callApi.get('/totalview/chart3', {\r\n                dt_start: this.state.searchDt.from,\r\n                dt_end: this.state.searchDt.to,\r\n            })\r\n\r\n            this.setState({\r\n                data: {\r\n                    ...this.state.data,\r\n                    chart3: res.data\r\n                }\r\n            }, () => { console.log('chart3', this.state.data.chart3) })\r\n        } catch (err) {\r\n            console.log('##### ERROR #####')\r\n            console.error(err)\r\n        }\r\n    }\r\n    grid = async () => {\r\n        try {\r\n            let res = await this.util.callApi.get('/totalview/grid_data', {\r\n                dt_start: this.state.searchDt.from,\r\n                dt_end: this.state.searchDt.to,\r\n                group_fg: this.state.searchDt.groupFg\r\n            })\r\n\r\n            this.setState({\r\n                data: {\r\n                    ...this.state.data,\r\n                    gridData: res.data\r\n                }\r\n            }, () => { console.log('grid', this.state.data.gridData) })\r\n        } catch (err) {\r\n            console.log('##### ERROR #####')\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Search\r\n                    onConfirm={(e) => {\r\n                        console.log('this.state => ', this.state)\r\n                        console.log('this.props => ', this.props)\r\n                    }}>\r\n                    <JDate\r\n                        label='조회기간'\r\n                        type='period'\r\n                        value={this.state.searchDt}\r\n                        onChange={(e) => {\r\n                            this.setState({ searchDt: e.value })\r\n                        }} />\r\n                    <JDate\r\n                        label='기준일자'\r\n                        type='single'\r\n                        value={this.state.baseDt}\r\n                        onChange={(e) => {\r\n                            this.setState({ baseDt: e.value })\r\n                        }} />\r\n                    <JButton label='년도' onClick={() => {\r\n                        console.log('년도')\r\n                        this.setState({\r\n                            searchDt: { from: this.props.util.baseDate.yearFirstDay, to: this.props.util.baseDate.yearLastDay },\r\n                            baseDt: this.props.util.baseDate.today\r\n                        })\r\n                    }} />\r\n                    <JButton label='1분기' onClick={() => {\r\n                        console.log('1분기')\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter1 })\r\n                    }} />\r\n                    <JButton label='2분기' onClick={() => {\r\n                        console.log('2분기')\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter2 })\r\n                    }} />\r\n                    <JButton label='3분기' onClick={() => {\r\n                        console.log('3분기')\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter3 })\r\n                    }} />\r\n                    <JButton label='4분기' onClick={() => {\r\n                        console.log('4분기')\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter4 })\r\n                    }} />\r\n                </Search>\r\n                <Contents >\r\n                    <JCard x={'1/12'} y={'1/3'} title='기준'>\r\n                        <DataTable\r\n                            noHeader\r\n                            columns={col}\r\n                            data={this.state.data.gridData}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'1/4'} y={'4/3'} title={'이슈별유형'} >\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"PieChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.chart1}\r\n                            options={{\r\n                                chartArea: {\r\n                                    width: '90%',\r\n                                    height: '80%'\r\n                                },\r\n                                pieHole: 0.4,\r\n                                legend: {\r\n                                    position: 'right',\r\n                                    alignment: 'center'\r\n                                },\r\n                            }}\r\n                            rootProps={{ 'data-testid': '1' }}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'5/4'} y={'4/3'} title={'팀별'} >\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"BarChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.chart2}\r\n                            options={{\r\n                                // backgroundColor: {\r\n                                //     stroke: '#888',\r\n                                //     strokeWidth: 1\r\n                                // },\r\n                                isStacked: 'percent',\r\n                                // width: 500,\r\n                                // height: 280,\r\n                                legend: {\r\n                                    position: 'right',\r\n                                    maxLines: 4,\r\n                                    alignment: 'center'\r\n                                },\r\n                                bar: {\r\n                                    groupWidth: '50%'\r\n                                },\r\n                                chartArea: {\r\n                                    // top: 40,\r\n                                    width: '60%',\r\n                                    height: '80%'\r\n                                },\r\n                                hAxis: {\r\n                                    minValue: 0,\r\n                                    ticks: [0, .2, .4, .6, .8, 1]\r\n                                }\r\n                            }}\r\n                            rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'9/4'} y={'4/3'} title={'연구개발'} >\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"BarChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.chart3}\r\n                            options={{\r\n                                // backgroundColor: {\r\n                                //     stroke: '#888',\r\n                                //     strokeWidth: 1\r\n                                // },\r\n                                isStacked: true,\r\n                                // width: 500,\r\n                                // height: 280,\r\n                                legend: {\r\n                                    position: 'right',\r\n                                    maxLines: 4,\r\n                                    alignment: 'center'\r\n                                },\r\n                                bar: {\r\n                                    groupWidth: '50%'\r\n                                },\r\n                                chartArea: {\r\n                                    // top: 40,\r\n                                    width: '60%',\r\n                                    height: '80%'\r\n                                },\r\n                            }}\r\n                            rootProps={{ 'data-testid': '3' }}\r\n                        />\r\n                    </JCard>\r\n                </Contents>\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\menu\\main\\tabs\\Tab3.js",["238","239","240","241","242","243","244"],"import React from 'react';\r\nimport Search from '../../../component/Search'\r\nimport Contents from '../../../component/Contents'\r\nimport Chart from 'react-google-charts'\r\nimport { JButton, JCard, JDate, JDefault, JDropDown, JLabel, JMenu, JTextField } from '../../../component/condition'\r\nimport DataTable, { defaultThemes } from 'react-data-table-component'\r\n\r\nexport default class extends React.Component {\r\n    util = this.props.util\r\n\r\n    state = {\r\n        searchDt: {\r\n            from: this.util.baseDate.yearFirstDay,\r\n            to: this.util.baseDate.yearLastDay,\r\n        },\r\n        groupFg: '0',\r\n        baseDt: this.util.baseDate.today,\r\n\r\n        data: {\r\n            totalGrid: [],\r\n            categoryLGrid: [],\r\n            categoryMGrid: [],\r\n            categorySGrid: [],\r\n            categoryLChart: [],\r\n            categoryMChart: [],\r\n            categorySChart: [],\r\n        }\r\n    }\r\n\r\n    getData = {\r\n        totalGrid: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/manday/selectRank', {\r\n                    dt_start: this.state.searchDt.from,\r\n                    dt_end: this.state.searchDt.to,\r\n                    dt_base: this.state.baseDt,\r\n                    group_fg: this.state.groupFg\r\n                })\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        totalGrid: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        categoryLGrid: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/manday/selectRankLMS', {\r\n                    dt_start: this.state.searchDt.from,\r\n                    dt_end: this.state.searchDt.to,\r\n                    dt_base: this.state.baseDt,\r\n                    group_fg: this.state.groupFg,\r\n                    lms_fg: 'L'\r\n                })\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        categoryLGrid: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        categoryMGrid: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/manday/selectRankLMS', {\r\n                    dt_start: this.state.searchDt.from,\r\n                    dt_end: this.state.searchDt.to,\r\n                    dt_base: this.state.baseDt,\r\n                    group_fg: this.state.groupFg,\r\n                    lms_fg: 'M'\r\n                })\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        categoryMGrid: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        categorySGrid: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/manday/selectRankLMS', {\r\n                    dt_start: this.state.searchDt.from,\r\n                    dt_end: this.state.searchDt.to,\r\n                    dt_base: this.state.baseDt,\r\n                    group_fg: this.state.groupFg,\r\n                    lms_fg: 'S'\r\n                })\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        categorySGrid: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        categoryLChart: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/manday/selectRankLMSChart', {\r\n                    dt_start: this.state.searchDt.from,\r\n                    dt_end: this.state.searchDt.to,\r\n                    dt_base: this.state.baseDt,\r\n                    group_fg: this.state.groupFg,\r\n                    lms_fg: 'L'\r\n                })\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        categoryLChart: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        categoryMChart: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/manday/selectRankLMSChart', {\r\n                    dt_start: this.state.searchDt.from,\r\n                    dt_end: this.state.searchDt.to,\r\n                    dt_base: this.state.baseDt,\r\n                    group_fg: this.state.groupFg,\r\n                    lms_fg: 'M'\r\n                })\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        categoryMChart: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n        categorySChart: async () => {\r\n            try {\r\n                let res = await this.util.callApi.get('/manday/selectRankLMSChart', {\r\n                    dt_start: this.state.searchDt.from,\r\n                    dt_end: this.state.searchDt.to,\r\n                    dt_base: this.state.baseDt,\r\n                    group_fg: this.state.groupFg,\r\n                    lms_fg: 'S'\r\n                })\r\n                this.setState({\r\n                    data: {\r\n                        ...this.state.data,\r\n                        categorySChart: res.data\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                console.log('##### ERROR #####')\r\n                console.error(err)\r\n            }\r\n        },\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.getData.totalGrid()\r\n        this.getData.categoryLGrid()\r\n        this.getData.categoryMGrid()\r\n        this.getData.categorySGrid()\r\n        this.getData.categoryLChart()\r\n        this.getData.categoryMChart()\r\n        this.getData.categorySChart()\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Search\r\n                    onConfirm={(e) => {\r\n                        console.log('this.state => ', this.state)\r\n                        console.log('this.props => ', this.props)\r\n                    }}>\r\n                    <JDate\r\n                        label='조회기간'\r\n                        type='period'\r\n                        value={this.state.searchDt}\r\n                        onChange={(e) => {\r\n                            this.setState({ searchDt: e.value })\r\n                        }} />\r\n                    <JDate\r\n                        label='기준일자'\r\n                        type='single'\r\n                        value={this.state.baseDt}\r\n                        onChange={(e) => {\r\n                            this.setState({ baseDt: e.value })\r\n                        }} />\r\n                    <JButton label='년도' onClick={() => {\r\n                        console.log('년도')\r\n                        this.setState({\r\n                            searchDt: { from: this.props.util.baseDate.yearFirstDay, to: this.props.util.baseDate.yearLastDay },\r\n                            baseDt: this.props.util.baseDate.today\r\n                        })\r\n                    }} />\r\n                    <JButton label='1분기' onClick={() => {\r\n                        console.log('1분기')\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter1 })\r\n                    }} />\r\n                    <JButton label='2분기' onClick={() => {\r\n                        console.log('2분기')\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter2 })\r\n                    }} />\r\n                    <JButton label='3분기' onClick={() => {\r\n                        console.log('3분기')\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter3 })\r\n                    }} />\r\n                    <JButton label='4분기' onClick={() => {\r\n                        console.log('4분기')\r\n                        this.setState({ searchDt: this.props.util.baseDate.quarter4 })\r\n                    }} />\r\n                </Search>\r\n                <Contents >\r\n                    <JCard x={'1/12'} y={'1/2'} title={'기준'} >\r\n                        <DataTable\r\n                            noHeader\r\n                            columns={[\r\n                                { name: '순위', selector: 'RANK', sortable: false, center: true },\r\n                                { name: '대분류', selector: 'CATEGORY_L', sortable: false, grow: 2 },\r\n                                { name: '중분류', selector: 'CATEGORY_M', sortable: false, grow: 2 },\r\n                                { name: '소분류', selector: 'CATEGORY_S', sortable: false, grow: 2 },\r\n                                { name: '총 인원(명)', selector: 'CNT', sortable: false, right: true },\r\n                                { name: '총 투입(시간)', selector: 'TIME_SUM', sortable: false, right: true },\r\n                                { name: '투입공수(M/D)', selector: 'MD', sortable: false, right: true },\r\n                            ]}\r\n                            data={this.state.data.totalGrid}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'1/6'} y={'3/3'} title={'대분류'} >\r\n                        <DataTable\r\n                            noHeader\r\n                            columns={[\r\n                                { name: '대분류', selector: 'CATEGORY', sortable: false, grow: 2 },\r\n                                { name: '총 인원(명)', selector: 'CNT', sortable: false, right: true },\r\n                                { name: '총 투입(시간)', selector: 'TIME_SUM', sortable: false, right: true },\r\n                                { name: '투입공수(M/D)', selector: 'MD', sortable: false, right: true },\r\n                            ]}\r\n                            data={this.state.data.categoryLGrid}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'7/6'} y={'3/3'} title={'대분류'} >\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"BarChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.categoryLChart}\r\n                            options={{\r\n                                chartArea: {\r\n                                    width: '70%',\r\n                                    height: '80%'\r\n                                },\r\n                                legend: { position: 'none' }\r\n                            }}\r\n                            // For tests\r\n                            rootProps={{ 'data-testid': '1' }}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'1/6'} y={'6/3'} title={'중분류'} >\r\n                        <DataTable\r\n                            noHeader\r\n                            columns={[\r\n                                { name: '중분류', selector: 'CATEGORY', sortable: false, grow: 2 },\r\n                                { name: '총 인원(명)', selector: 'CNT', sortable: false, right: true },\r\n                                { name: '총 투입(시간)', selector: 'TIME_SUM', sortable: false, right: true },\r\n                                { name: '투입공수(M/D)', selector: 'MD', sortable: false, right: true },\r\n                            ]}\r\n                            data={this.state.data.categoryMGrid}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'7/6'} y={'6/3'} title={'중분류'} >\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"BarChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.categoryMChart}\r\n                            options={{\r\n                                chartArea: {\r\n                                    width: '70%',\r\n                                    height: '80%'\r\n                                },\r\n                                legend: { position: 'none' }\r\n                            }}\r\n                            // For tests\r\n                            rootProps={{ 'data-testid': '1' }}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'1/6'} y={'9/3'} title={'소분류'} >\r\n                        <DataTable\r\n                            noHeader\r\n                            columns={[\r\n                                { name: '소분류', selector: 'CATEGORY', sortable: false, grow: 2 },\r\n                                { name: '총 인원(명)', selector: 'CNT', sortable: false, right: true },\r\n                                { name: '총 투입(시간)', selector: 'TIME_SUM', sortable: false, right: true },\r\n                                { name: '투입공수(M/D)', selector: 'MD', sortable: false, right: true },\r\n                            ]}\r\n                            data={this.state.data.categorySGrid}\r\n                        />\r\n                    </JCard>\r\n                    <JCard x={'7/6'} y={'9/3'} title={'소분류'} >\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            chartType=\"BarChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={this.state.data.categorySChart}\r\n                            options={{\r\n                                chartArea: {\r\n                                    width: '70%',\r\n                                    height: '80%'\r\n                                },\r\n                                legend: { position: 'none' }\r\n                            }}\r\n                            // For tests\r\n                            rootProps={{ 'data-testid': '1' }}\r\n                        />\r\n                    </JCard>\r\n                </Contents>\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\index.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JButton.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JDate.js",["245"],"import React from 'react';\r\n\r\nexport default class JDate extends React.Component {\r\n    state = { date: undefined }\r\n    componentDidMount = () => {\r\n        this.setState({ date: this.props.value || { from: '', to: '' } }, () => { })\r\n    }\r\n\r\n    setDate = (date) => {\r\n        let y = ''; let m = ''; let d = '';\r\n\r\n        switch (date.length || 0) {\r\n            case 8:\r\n                y = date.substring(0, 4)\r\n                m = date.substring(4, 6)\r\n                d = date.substring(6, 8)\r\n                break;\r\n        }\r\n        return `${y || ''}-${m || ''}-${d || ''}`\r\n    }\r\n\r\n    render = () => {\r\n        let { label, type, value, onChange } = this.props\r\n        value = value || { from: '', to: '' }\r\n\r\n        return (\r\n            <div className={`jCondition `}>\r\n                <div className='label'>{label || 'label'}</div>\r\n\r\n                {\r\n                    type === 'period' ?\r\n                        <div>\r\n                            <input\r\n                                className='JDate JDateFrom input'\r\n                                type='date'\r\n                                value={this.setDate(value.from || value.fr || '')}\r\n                                onChange={(e) => {\r\n                                    this.setState({ date: { ...this.state.date, from: e.target.value.replace(/[-]/gi, '') } }, () => {\r\n                                        onChange({ ...e.target, value: { from: this.state.date.from, to: this.state.date.to } })\r\n                                    })\r\n\r\n                                }} />\r\n                            &nbsp;~&nbsp;\r\n                            <input\r\n                                className='JDate JDateTo input'\r\n                                type='date'\r\n                                value={this.setDate(value.to || '')}\r\n                                onChange={(e) => {\r\n                                    this.setState({ date: { ...this.state.date, to: e.target.value.replace(/[-]/gi, '') } }, () => {\r\n                                        onChange({ ...e.target, value: { from: this.state.date.from, to: this.state.date.to } })\r\n                                    })\r\n                                }} />\r\n                        </div> :\r\n                        <input\r\n                            className='JDate input'\r\n                            type='date'\r\n                            value={this.setDate(value)}\r\n                            onChange={(e) => {\r\n                                this.setState({ date: e.target.value.replace(/[-]/gi, '') }, () => {\r\n                                    onChange({ ...e.target, value: this.state.date })\r\n                                })\r\n                            }} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n<JDate\r\n    label='조회기간'\r\n    type='period'\r\n    value={this.state.date1}\r\n    onChange={(e) => {\r\n        this.setState({ date1: e.value })\r\n    }} />\r\n<JDate\r\n    label='기준일자'\r\n    type='single'\r\n    value={this.state.date2}\r\n    onChange={(e) => {\r\n        this.setState({ date2: e.value })\r\n    }} />\r\n*/","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JDefault.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JCard.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JLabel.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JDropDown.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JMenu.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JMenuTab.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JMultiTextField.js",["246"],"import React from 'react';\r\n\r\nexport default class JMultiTextField extends React.Component {\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    render = () => {\r\n        let { value, readOnly } = this.props\r\n\r\n        return (\r\n            <div className={`jCondition jMultiTextFieldWrapper`}>\r\n                <textarea\r\n                    className={'jMultiTextField'}\r\n                    wrap={'off'}\r\n                    value={value || ''}\r\n                    readOnly\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JTab.js",["247"],"import React from 'react';\r\n\r\nexport default class JTab extends React.Component {\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    render = () => {\r\n        let { label } = this.props\r\n        return (\r\n            <div className='jTabContent'>\r\n                {/* test */}\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JDropDown2.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JTextField.js",[],"C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JTabs.js",["248","249","250","251","252"],"import React from 'react';\r\nimport JTab from './JTab';\r\n\r\nexport default class JTabs extends React.Component {\r\n    state = {\r\n        tabList: {},\r\n        tabIndex: this.props.children[0].props.label\r\n    }\r\n\r\n    onClick = (v) => {\r\n        this.setState({ tabIndex: v })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let tabList = {}\r\n        this.props.children.map((v) => {\r\n            tabList[v.props.label] = v\r\n        })\r\n\r\n        this.setState({\r\n            tabList: tabList,\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        let { label, key, onChange } = this.props\r\n        let { tabList, tabIndex } = this.state\r\n        let selectTab = null;\r\n        this.props.children.map((v) => {\r\n            // console.log(v)\r\n            if (v.props.label === tabIndex) {\r\n                selectTab = v\r\n            }\r\n        })\r\n\r\n        // console.log(tabList[tabIndex])\r\n        // console.log(selectTab)\r\n\r\n        return (\r\n            <div className={`jCondition jTab`}>\r\n                <div className='jTabList'>\r\n                    {\r\n                        Object.keys(tabList).map((v, i) => {\r\n                            return (\r\n                                <div\r\n                                    key={i}\r\n                                    className={`jTabItem btn ${v === tabIndex ? 'select' : ''}`}\r\n                                    onClick={(e) => {\r\n                                        this.onClick(v);\r\n                                        if ((onChange || '') !== '') {\r\n                                            onChange({ label: v, value: tabList[v].props.value || v })\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {v}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                {/* {tabList[tabIndex]} */}\r\n                {selectTab}\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\YangSW\\Desktop\\jirareport\\jirareport_front\\src\\component\\condition\\JMultiDropDown.js",["253"],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":5,"column":33,"nodeType":"260","messageId":"261","endLine":5,"endColumn":41},{"ruleId":"258","severity":1,"message":"262","line":5,"column":43,"nodeType":"260","messageId":"261","endLine":5,"endColumn":52},{"ruleId":"258","severity":1,"message":"263","line":5,"column":54,"nodeType":"260","messageId":"261","endLine":5,"endColumn":60},{"ruleId":"258","severity":1,"message":"264","line":6,"column":21,"nodeType":"260","messageId":"261","endLine":6,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":34,"column":1,"nodeType":"267","endLine":355,"endColumn":2},{"ruleId":"258","severity":1,"message":"268","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":17},{"ruleId":"258","severity":1,"message":"269","line":4,"column":26,"nodeType":"260","messageId":"261","endLine":4,"endColumn":31},{"ruleId":"258","severity":1,"message":"262","line":4,"column":43,"nodeType":"260","messageId":"261","endLine":4,"endColumn":52},{"ruleId":"258","severity":1,"message":"263","line":4,"column":54,"nodeType":"260","messageId":"261","endLine":4,"endColumn":60},{"ruleId":"258","severity":1,"message":"270","line":4,"column":69,"nodeType":"260","messageId":"261","endLine":4,"endColumn":79},{"ruleId":"258","severity":1,"message":"271","line":4,"column":97,"nodeType":"260","messageId":"261","endLine":4,"endColumn":102},{"ruleId":"258","severity":1,"message":"272","line":4,"column":104,"nodeType":"260","messageId":"261","endLine":4,"endColumn":108},{"ruleId":"258","severity":1,"message":"273","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":13},{"ruleId":"258","severity":1,"message":"274","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":17},{"ruleId":"258","severity":1,"message":"264","line":6,"column":21,"nodeType":"260","messageId":"261","endLine":6,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":21,"column":1,"nodeType":"267","endLine":141,"endColumn":2},{"ruleId":"258","severity":1,"message":"275","line":59,"column":15,"nodeType":"260","messageId":"261","endLine":59,"endColumn":23},{"ruleId":"258","severity":1,"message":"268","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":4,"column":33,"nodeType":"260","messageId":"261","endLine":4,"endColumn":41},{"ruleId":"258","severity":1,"message":"263","line":4,"column":71,"nodeType":"260","messageId":"261","endLine":4,"endColumn":77},{"ruleId":"258","severity":1,"message":"270","line":4,"column":86,"nodeType":"260","messageId":"261","endLine":4,"endColumn":96},{"ruleId":"258","severity":1,"message":"271","line":4,"column":98,"nodeType":"260","messageId":"261","endLine":4,"endColumn":103},{"ruleId":"258","severity":1,"message":"272","line":4,"column":105,"nodeType":"260","messageId":"261","endLine":4,"endColumn":109},{"ruleId":"258","severity":1,"message":"273","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":13},{"ruleId":"258","severity":1,"message":"264","line":6,"column":21,"nodeType":"260","messageId":"261","endLine":6,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":21,"column":1,"nodeType":"267","endLine":229,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":4,"column":33,"nodeType":"260","messageId":"261","endLine":4,"endColumn":41},{"ruleId":"258","severity":1,"message":"262","line":4,"column":43,"nodeType":"260","messageId":"261","endLine":4,"endColumn":52},{"ruleId":"258","severity":1,"message":"263","line":4,"column":54,"nodeType":"260","messageId":"261","endLine":4,"endColumn":60},{"ruleId":"258","severity":1,"message":"273","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":13},{"ruleId":"258","severity":1,"message":"264","line":6,"column":21,"nodeType":"260","messageId":"261","endLine":6,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":92,"column":1,"nodeType":"267","endLine":598,"endColumn":2},{"ruleId":"276","severity":1,"message":"277","line":194,"column":17,"nodeType":"278","messageId":"279","endLine":216,"endColumn":18},{"ruleId":"258","severity":1,"message":"280","line":229,"column":13,"nodeType":"260","messageId":"261","endLine":229,"endColumn":21},{"ruleId":"276","severity":1,"message":"277","line":231,"column":9,"nodeType":"278","messageId":"279","endLine":264,"endColumn":10},{"ruleId":"258","severity":1,"message":"281","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":14},{"ruleId":"258","severity":1,"message":"282","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":16},{"ruleId":"258","severity":1,"message":"273","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":13},{"ruleId":"258","severity":1,"message":"268","line":8,"column":10,"nodeType":"260","messageId":"261","endLine":8,"endColumn":17},{"ruleId":"258","severity":1,"message":"283","line":8,"column":19,"nodeType":"260","messageId":"261","endLine":8,"endColumn":24},{"ruleId":"258","severity":1,"message":"269","line":8,"column":26,"nodeType":"260","messageId":"261","endLine":8,"endColumn":31},{"ruleId":"258","severity":1,"message":"259","line":8,"column":33,"nodeType":"260","messageId":"261","endLine":8,"endColumn":41},{"ruleId":"258","severity":1,"message":"262","line":8,"column":43,"nodeType":"260","messageId":"261","endLine":8,"endColumn":52},{"ruleId":"258","severity":1,"message":"263","line":8,"column":64,"nodeType":"260","messageId":"261","endLine":8,"endColumn":70},{"ruleId":"258","severity":1,"message":"270","line":8,"column":79,"nodeType":"260","messageId":"261","endLine":8,"endColumn":89},{"ruleId":"258","severity":1,"message":"284","line":9,"column":8,"nodeType":"260","messageId":"261","endLine":9,"endColumn":12},{"ruleId":"265","severity":1,"message":"266","line":11,"column":1,"nodeType":"267","endLine":40,"endColumn":2},{"ruleId":"285","severity":1,"message":"286","line":42,"column":21,"nodeType":"287","endLine":42,"endColumn":77},{"ruleId":"258","severity":1,"message":"259","line":4,"column":33,"nodeType":"260","messageId":"261","endLine":4,"endColumn":41},{"ruleId":"258","severity":1,"message":"263","line":4,"column":54,"nodeType":"260","messageId":"261","endLine":4,"endColumn":60},{"ruleId":"258","severity":1,"message":"271","line":4,"column":81,"nodeType":"260","messageId":"261","endLine":4,"endColumn":86},{"ruleId":"258","severity":1,"message":"272","line":4,"column":88,"nodeType":"260","messageId":"261","endLine":4,"endColumn":92},{"ruleId":"258","severity":1,"message":"273","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":13},{"ruleId":"258","severity":1,"message":"264","line":6,"column":21,"nodeType":"260","messageId":"261","endLine":6,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":9,"column":1,"nodeType":"267","endLine":219,"endColumn":2},{"ruleId":"258","severity":1,"message":"288","line":81,"column":21,"nodeType":"260","messageId":"261","endLine":81,"endColumn":24},{"ruleId":"258","severity":1,"message":"268","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":4,"column":33,"nodeType":"260","messageId":"261","endLine":4,"endColumn":41},{"ruleId":"258","severity":1,"message":"263","line":4,"column":54,"nodeType":"260","messageId":"261","endLine":4,"endColumn":60},{"ruleId":"258","severity":1,"message":"270","line":4,"column":69,"nodeType":"260","messageId":"261","endLine":4,"endColumn":79},{"ruleId":"258","severity":1,"message":"271","line":4,"column":81,"nodeType":"260","messageId":"261","endLine":4,"endColumn":86},{"ruleId":"258","severity":1,"message":"272","line":4,"column":88,"nodeType":"260","messageId":"261","endLine":4,"endColumn":92},{"ruleId":"258","severity":1,"message":"274","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":17},{"ruleId":"258","severity":1,"message":"264","line":6,"column":21,"nodeType":"260","messageId":"261","endLine":6,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":9,"column":1,"nodeType":"267","endLine":156,"endColumn":2},{"ruleId":"258","severity":1,"message":"268","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":4,"column":33,"nodeType":"260","messageId":"261","endLine":4,"endColumn":41},{"ruleId":"258","severity":1,"message":"289","line":4,"column":54,"nodeType":"260","messageId":"261","endLine":4,"endColumn":69},{"ruleId":"258","severity":1,"message":"263","line":4,"column":71,"nodeType":"260","messageId":"261","endLine":4,"endColumn":77},{"ruleId":"258","severity":1,"message":"270","line":4,"column":86,"nodeType":"260","messageId":"261","endLine":4,"endColumn":96},{"ruleId":"258","severity":1,"message":"271","line":4,"column":98,"nodeType":"260","messageId":"261","endLine":4,"endColumn":103},{"ruleId":"258","severity":1,"message":"272","line":4,"column":105,"nodeType":"260","messageId":"261","endLine":4,"endColumn":109},{"ruleId":"258","severity":1,"message":"273","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":13},{"ruleId":"258","severity":1,"message":"264","line":6,"column":21,"nodeType":"260","messageId":"261","endLine":6,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":28,"column":1,"nodeType":"267","endLine":186,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":5,"column":33,"nodeType":"260","messageId":"261","endLine":5,"endColumn":41},{"ruleId":"258","severity":1,"message":"262","line":5,"column":43,"nodeType":"260","messageId":"261","endLine":5,"endColumn":52},{"ruleId":"258","severity":1,"message":"263","line":5,"column":54,"nodeType":"260","messageId":"261","endLine":5,"endColumn":60},{"ruleId":"258","severity":1,"message":"290","line":5,"column":62,"nodeType":"260","messageId":"261","endLine":5,"endColumn":67},{"ruleId":"258","severity":1,"message":"270","line":5,"column":69,"nodeType":"260","messageId":"261","endLine":5,"endColumn":79},{"ruleId":"265","severity":1,"message":"266","line":7,"column":1,"nodeType":"267","endLine":343,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":5,"column":33,"nodeType":"260","messageId":"261","endLine":5,"endColumn":41},{"ruleId":"258","severity":1,"message":"262","line":5,"column":43,"nodeType":"260","messageId":"261","endLine":5,"endColumn":52},{"ruleId":"258","severity":1,"message":"263","line":5,"column":54,"nodeType":"260","messageId":"261","endLine":5,"endColumn":60},{"ruleId":"258","severity":1,"message":"290","line":5,"column":62,"nodeType":"260","messageId":"261","endLine":5,"endColumn":67},{"ruleId":"258","severity":1,"message":"270","line":5,"column":69,"nodeType":"260","messageId":"261","endLine":5,"endColumn":79},{"ruleId":"258","severity":1,"message":"264","line":6,"column":21,"nodeType":"260","messageId":"261","endLine":6,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":29,"column":1,"nodeType":"267","endLine":275,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":5,"column":33,"nodeType":"260","messageId":"261","endLine":5,"endColumn":41},{"ruleId":"258","severity":1,"message":"262","line":5,"column":43,"nodeType":"260","messageId":"261","endLine":5,"endColumn":52},{"ruleId":"258","severity":1,"message":"263","line":5,"column":54,"nodeType":"260","messageId":"261","endLine":5,"endColumn":60},{"ruleId":"258","severity":1,"message":"290","line":5,"column":62,"nodeType":"260","messageId":"261","endLine":5,"endColumn":67},{"ruleId":"258","severity":1,"message":"270","line":5,"column":69,"nodeType":"260","messageId":"261","endLine":5,"endColumn":79},{"ruleId":"258","severity":1,"message":"264","line":6,"column":21,"nodeType":"260","messageId":"261","endLine":6,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":8,"column":1,"nodeType":"267","endLine":339,"endColumn":2},{"ruleId":"276","severity":1,"message":"277","line":12,"column":9,"nodeType":"278","messageId":"279","endLine":18,"endColumn":10},{"ruleId":"258","severity":1,"message":"291","line":9,"column":22,"nodeType":"260","messageId":"261","endLine":9,"endColumn":30},{"ruleId":"258","severity":1,"message":"292","line":9,"column":15,"nodeType":"260","messageId":"261","endLine":9,"endColumn":20},{"ruleId":"258","severity":1,"message":"272","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":12},{"ruleId":"293","severity":1,"message":"294","line":16,"column":37,"nodeType":"295","messageId":"296","endLine":16,"endColumn":39},{"ruleId":"258","severity":1,"message":"292","line":26,"column":15,"nodeType":"260","messageId":"261","endLine":26,"endColumn":20},{"ruleId":"258","severity":1,"message":"297","line":26,"column":22,"nodeType":"260","messageId":"261","endLine":26,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":29,"column":37,"nodeType":"295","messageId":"296","endLine":29,"endColumn":39},{"ruleId":"258","severity":1,"message":"298","line":48,"column":28,"nodeType":"260","messageId":"261","endLine":48,"endColumn":33},"no-native-reassign",["299"],"no-negated-in-lhs",["300"],"no-unused-vars","'JDefault' is defined but never used.","Identifier","unusedVar","'JDropDown' is defined but never used.","'JLabel' is defined but never used.","'defaultThemes' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous class","ExportDefaultDeclaration","'JButton' is defined but never used.","'JDate' is defined but never used.","'JTextField' is defined but never used.","'JTabs' is defined but never used.","'JTab' is defined but never used.","'Chart' is defined but never used.","'DataTable' is defined but never used.","'setParam' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'tempData' is assigned a value but never used.","'Search' is defined but never used.","'Contents' is defined but never used.","'JCard' is defined but never used.","'util' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'res' is assigned a value but never used.","'JMultiTextField' is defined but never used.","'JMenu' is defined but never used.","'readOnly' is assigned a value but never used.","'label' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'key' is assigned a value but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]